         MACRO
         CALLSRV &PARM=,&LABL=,&ATOK=,                               +++
               &SYSNAME=,                                            +++
               &RETOK=,                                              +++
               &DSPTCHD=,                                            +++
               &NOTSUP=,                                             +++
               &NOTFND=,                                             +++
               &QUIESC=,                                             +++
               &REQFAIL=,                                            +++
               &SOS=,                                                +++
               &LOCKED=,                                             +++
               &NOTINIT=,                                            +++
               &ERROR=
.*
.* ****************************************************************** *
.* CALLSRV CALL SRV                                                   *
.* COPYRIGHT (C) SIMON SPANCHAK 1999                                  *
.* ****************************************************************** *
         GBLB  &G@ENTC                  SEQUENCE ENTRIES AND EXITS
         LCLC  &PLBL
&PLBL    SETC 'CX&SYSNDX'
         XC    &LABL.PCR#,&LABL.PCR#
         AIF   ('&PARM' EQ '').NOPARM
         AIF   ('&ATOK' EQ '').NOATOK
         @@ REG=R0,ADDR=&ATOK
         ST    R0,&LABL.ATOK       ACCESS TOKEN
         AIF ('&ATOK' NE '0').NOATOK
         AIF   ('&SYSNAME' EQ '').NOSYSN
.NOATOK  ANOP
         AIF   ('&SYSNAME' EQ '').SKPSYSN
         @@ REG=R1,ADDR=&SYSNAME
         LTR   R1,R1
         BZ    &PLBL
         MVC   &LABL.SYSN,0(R1)
.SKPSYSN ANOP
&PLBL    LA    R1,&LABL.MSG
         ST    R1,&PARM
         LA    R1,&PARM
         AIF (&G@ENTC).USEAPI       IF BETWEEN SSENTRY AND SSEXIT
         L     R15,=V(SRSTUB)       OBTAINS STACK
         AGO .BASIT
.USEAPI  ANOP
         L     R15,=V(SRSTUBA)      ASSUME STACK EXISTS
.BASIT   ANOP
         BASR  R14,R15
         AIF ('&NOTSUP'  NE '').GBRTBL
         AIF ('&NOTFND'  NE '').GBRTBL
         AIF ('&QUIESC'  NE '').GBRTBL
         AIF ('&REQFAIL' NE '').GBRTBL
         AIF ('&SOS'     NE '').GBRTBL
         AIF ('&LOCKED'  NE '').GBRTBL
         AIF ('&NOTINIT' NE '').GBRTBL
         AIF ('&DSPTCHD' NE '').GBRTBL
*
         AIF ('&RETOK'   EQ '').CHKERR
         LTR  R15,R15
         COND Z,LBL=&RETOK
         AIF ('&ERROR'   EQ '').MEXIT     NORED WITH NO RETOK'
         COND ,LBL=&ERROR
.MEXIT   ANOP
         MEXIT
.CHKERR  ANOP
         AIF ('&ERROR'   EQ '').MEXIT
         LTR  R15,R15
         COND NZ,LBL=&ERROR
         MEXIT
.*
.GBRTBL  ANOP
         AIF ('&RETOK'   EQ '').MSNGLBL
         AIF ('&NOTSUP'  EQ '').MSNGLBL
         AIF ('&NOTFND'  EQ '').MSNGLBL
         AIF ('&QUIESC'  EQ '').MSNGLBL
         AIF ('&REQFAIL' EQ '').MSNGLBL
         AIF ('&SOS'     EQ '').MSNGLBL
         AIF ('&LOCKED'  EQ '').MSNGLBL
         AIF ('&NOTINIT' EQ '').MSNGLBL
         AIF ('&DSPTCHD' EQ '').MSNGLBL
         AIF ('&ERROR'   EQ '').MSNGLBL
         @@# (R15),                                                   ++
               &RETOK,                                                ++
               &REQFAIL,                                              ++
               &QUIESC,                                               ++
               &NOTFND,                                               ++
               &SOS,                                                  ++
               &NOTSUP,                                               ++
               &LOCKED,                                               ++
               &NOTINIT,                                              ++
               &ERROR,                                                ++
               &DSPTCHD
         MEXIT
.*
.NOPARM  ANOP
         MNOTE 8,'CALLSRV PARM LIST IS REQUIRED'
         MEXIT
.NOSYSN  ANOP
         MNOTE 8,'CALLSRV SYSNAME REQUIRED WHEN ATOK IS ZERO'
         MEXIT
.MSNGLBL ANOP
         MNOTE 8,'CALLSRV MISSING BRANCH LABEL'
         MEXIT
.*
         MEND
