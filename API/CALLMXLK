         MACRO
&LABEL   CALLMXLK &TYPE=,&PREFIX=,&PARM=,&TOKEN=,&SYNC=YES,&KEY=,    +++
               &SYSNAME=,                                            +++
               &RETOK=,&ATOK=,                                       +++
               &DSPTCHD=,                                            +++
               &NOTSUP=,                                             +++
               &NOTFND=,                                             +++
               &QUIESC=,                                             +++
               &REQFAIL=,                                            +++
               &SOS=,                                                +++
               &LOCKED=,                                             +++
               &NOTINIT=,                                            +++
               &ERROR=
.*
.* ****************************************************************** *
.* CALLMXLK CALL MATRIX TO LOCK OR UNLOCK A VWA
.* COPYRIGHT (C) EXSPANS SYSTEM AND SOFTWARE DEV. INC. 1998           *
.* ****************************************************************** *
         LCLC  &PF                PREFIX
         LCLC  &LABL,&LBL,&LABX   LABEL
         LCLC  &RLAB,&RG          LABEL
.*
         AIF ('&PREFIX' EQ '').NOPF
&PF      SETC  '&PREFIX'
         AGO .PFSET
.NOPF    ANOP
&PF      SETC  'MX'
.PFSET   ANOP
&LABL    SETC  '&PF.US'
&LABX    SETC  '&PF.MS'
&RLAB    SETC  '&PF.RC'
&LBL     SETC  '&PF.&SYSNDX'
         AIF ('&LABEL' EQ '').NOLAB
&LABEL   DS    0H
.NOLAB   ANOP
         AIF ('&TYPE' EQ 'LOCK').LOCKIT
         AIF ('&TYPE' EQ 'UNLOCK').UNLOCK
         AGO .INVTYP
.LOCKIT  ANOP
         MVC   &LABL.REQ,=AL2(&LABL.RLCK) REQUEST LOCK
         MVI   &LABL.NFFL,&LABL.NFSN+&LABL.NFCL
         AIF ('&TOKEN' EQ '').NOTOKN
         @@ REG=R1,ADDR=&TOKEN           TOKEN
         MVC   &LABX.LTOK,0(R1)          MOVE IN TOKEN
        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,SYSNAME=&SYSNAME
         L     R1,&RLAB.KEY            RETURN KEY
         AIF ('&KEY' EQ '').NOKY
         @@ REG=R14,ADDR=&KEY          KEY ADDRESS
         ST    R1,0(,R14)
.NOKY    ANOP
         AIF ('&NOTSUP'  NE '').GBRTBL
         AIF ('&NOTFND'  NE '').GBRTBL
         AIF ('&QUIESC'  NE '').GBRTBL
         AIF ('&REQFAIL' NE '').GBRTBL
         AIF ('&SOS'     NE '').GBRTBL
         AIF ('&LOCKED'  NE '').GBRTBL
         AIF ('&NOTINIT' NE '').GBRTBL
         AIF ('&DSPTCHD' NE '').GBRTBL
.*
         AIF ('&RETOK'   EQ '').CHKERR
         LTR  R15,R15
         BZ   &RETOK
         AIF ('&ERROR'   EQ '').MEXIT
         B    &ERROR
.MEXIT   ANOP
         MEXIT
.CHKERR  ANOP
         AIF ('&ERROR'   EQ '').MEXIT
         LTR  R15,R15
         BNZ  &ERROR
         MEXIT
.*
.GBRTBL  ANOP
         AIF ('&RETOK'   EQ '').MSNGLBL
         AIF ('&NOTSUP'  EQ '').MSNGLBL
         AIF ('&NOTFND'  EQ '').MSNGLBL
         AIF ('&QUIESC'  EQ '').MSNGLBL
         AIF ('&REQFAIL' EQ '').MSNGLBL
         AIF ('&SOS'     EQ '').MSNGLBL
         AIF ('&LOCKED'  EQ '').MSNGLBL
         AIF ('&NOTINIT' EQ '').MSNGLBL
         AIF ('&DSPTCHD' EQ '').MSNGLBL
         AIF ('&ERROR'   EQ '').MSNGLBL
         @@# (R15),                                                   ++
               &RETOK,                                                ++
               &REQFAIL,                                              ++
               &QUIESC,                                               ++
               &NOTFND,                                               ++
               &SOS,                                                  ++
               &NOTSUP,                                               ++
               &LOCKED,                                               ++
               &NOTINIT,                                              ++
               &ERROR,                                                ++
               &DSPTCHD
         MEXIT
.*
.* UNLOCK A WORK AREA
.*
.UNLOCK  ANOP
         MVC   &LABL.REQ,=AL2(&LABL.RULK) REQUEST UNLOCK
.*
         MVI   &LABL.NFFL,&LABL.NFCL     SET CALL DESCRIPTOR FLAGS
.*
         AIF ('&SYNC' EQ '').SYYES
         AIF ('&SYNC' EQ 'YES').SYYES
         AIF ('&SYNC' EQ 'NO').SYNO
         @@ REG=R0,ADDR=&SYNC
         LTR   R0,R0                     SYNC OR ASYNCH?
         BNZ   &LBL.AS                   ASYNC
.SYYES   ANOP
         OI  &LABL.NFFL,&LABL.NFSN       SYNCHRONOUS
.SYNO    ANOP
&LBL.AS  DS   0H
.*
.*
         AIF ('&TOKEN' EQ '').NOTOKN
         @@ REG=R1,ADDR=&TOKEN           TOKEN
         MVC   &LABX.LTOK,0(R1)          MOVE IN TOKEN
         AIF ('&KEY' EQ '').NOKEY
         @@ REG=R1,ADDR=&KEY             KEY
         ST    R1,&LABX.LKEY             KEY TO UNLOCK WITH
        CALLSRV PARM=&PARM,LABL=&LABL,ATOK=&ATOK,                     ++
               SYSNAME=&SYSNAME,                                      ++
               RETOK=&RETOK,                                          ++
               DSPTCHD=&DSPTCHD,                                      ++
               NOTSUP=&NOTSUP,                                        ++
               NOTFND=&NOTFND,                                        ++
               QUIESC=&QUIESC,                                        ++
               REQFAIL=&REQFAIL,                                      ++
               SOS=&SOS,                                              ++
               LOCKED=&LOCKED,                                        ++
               NOTINIT=&NOTINIT,                                      ++
               ERROR=&ERROR
         MEXIT
.*
.INVTYP  ANOP
         MNOTE 8,'CALLMXLK TYPE MUST BE LOCK OR UNLOCK'
         MEXIT
.*
.NOTOKN  ANOP
         MNOTE 8,'CALLMXLK TOKEN PARM REQUIRED'
         MEXIT
.*
.NOKEY   ANOP
         MNOTE 8,'CALLMXLK KEY IS REQUIRED'
         MEXIT
.*
.MSNGLBL ANOP
         MNOTE 8,'CALLMXLK MISSING BRANCH LABEL'
         MEXIT
.*
.*
         MEND
