         TITLE 'ASMCONN ASSEMBLER MATRIX CLIENT EXAMPLE'
* ******************************************************************* *
* PROGRAM NAME: ASMCONN                                               *
* AUTHOR      : EXSPANS SYSTEMS INC.                                  *
* DATE        :                                                       *
* FUNCTION    : THIS PROGRAM DEMONSTRATES THE MATRIX API IN ASSEMBLER *
*             : CONNECT TO MATRIX THEN CONNECT TO A VIRTUAL WORK AREA *
*             :                                                       *
* OPERATING SYSTEM: OS/390                                            *
* ------------------------------------------------------------------- *
*                                                                     *
* ******************************************************************* *
*
ASMCONN  AENTRY
*
         MVC   SYSNAME,=CL4'MTRX'          NAME OF MATRIX TO USE
         MVC   SPCNAM,=CL4'SPCA'           NAME OF SPACE TO CONNECT TO
*
* OBTAIN ACCESS TO MATRIX. SAVE TOKEN IN VARIABLE ACCESS
*
         LA    R9,MXUSMSTX          OBTAIN ADDRESSIBILITY TO MESSAGE
         USING MXMSGREC,R9
*
         SRVACCES PREFIX=MX,PARM=PLST@,                               ++
               SYSNAME=SYSNAME,                                       ++
               ERROR=CONNFAIL
         ST    R1,ACCESS                   SAVE ACCESS TOKEN
*
* CALL MATRIX TO ASSOCIATE THE SPACE WITH THE DATASET
*
* THIS SHOWS THE CONNECT USING SYSNAME TO IDENTIFY THE INSTANCE OF
* MATRIX TO USE. IT IS PREFERABLE TO USE ATOK WHEN MULTIPLE INVOCATIONS
* OF MATRIX ARE MADE.
* ALL OF THE OPTIONAL CONDITIONS ARE GIVEN
*
AAAAA    CALLMXCN TYPE=CONNECT,PREFIX=MX,PARM=PLST@,                  ++
               WANAME=SPCNAM,           SPACE NAME                    ++
               TOKEN=TOKEN,             TOKEN                         ++
               SYSNAME=SYSNAME,         NAME OF MATRIX I WANT TO USE  ++
               SYNC=YES,                YES/NO(R?)                    ++
               RETOK=EXIT,              BRANCH IF RET OK              ++
               DSPTCHD=BUG,                    IF DISPATCHED          ++
               REQFAIL=RET04,                  REQUEST FAILED         ++
               QUIESC=EXIT,                    MATRIX SHUTTING DOWN   ++
               NOTFND=EXIT,                           NOT RUNNING     ++
               SOS=EXIT,                       SHORT ON STORAGE       ++
               NOTSUP=BUG,                     INVALID REQUEST        ++
               LOCKED=BBBBB,                   BUSY                   ++
               NOTINIT=BBBBB,                  NOT READY YET          ++
               ERROR=EXIT
*
* SHORT FORM OF CONNECT MACRO. THIS USES ATOK TO IDENTIFY THE MATRIX
* INSTANCE TO USE. IT COULD USE SYSNAME AS ABOVE.
*
BBBBB    CALLMXCN TYPE=CONNECT,PREFIX=MX,PARM=PLST@,                  ++
               ATOK=ACCESS,             ACCESS TOKEN                  ++
               WANAME=SPCNAM,           SPACE NAME                    ++
               TOKEN=TOKEN              TOKEN
         LTR   R15,R15                  CHECK RETURN CODE
         BNZ   AAAAA                    NOT ZERO
         B     EXIT
*
* DISCONNECT FROM A TABLE
*
DISCON   CALLMXCN TYPE=DISCONN,PREFIX=MX,PARM=PLST@,                  ++
               ATOK=ACCESS,             ACCESS TOKEN                  ++
               TOKEN=TOKEN,             TOKEN                         ++
               SYNC=YES,                YES/NO(R?)                    ++
               RETOK=EXIT,              BRANCH IF RET OK              ++
               DSPTCHD=BUG,                    IF DISPATCHED          ++
               REQFAIL=RET04,                  REQUEST FAILED         ++
               QUIESC=EXIT,                    MATRIX SHUTTING DOWN   ++
               NOTFND=EXIT,                           NOT RUNNING     ++
               SOS=EXIT,                       SHORT ON STORAGE       ++
               NOTSUP=BUG,                     INVALID REQUEST        ++
               LOCKED=DISCON,                  BUSY                   ++
               NOTINIT=DISCON,                 NOT READY YET          ++
               ERROR=EXIT
*
DDDDD    CALLMXCN TYPE=DISCONN,PREFIX=MX,PARM=PLST@,                  ++
               ATOK=ACCESS,             ACCESS TOKEN                  ++
               TOKEN=TOKEN,             TOKEN                         ++
               SYNC=YES
         LTR   R15,R15                  CHECK RETURN CODE
         BNZ   ERRMSG                   NOT ZERO
         B     EXIT
*
* THERE WAS AN ERROR HANDLING REQUEST
*
RET04    DS    0H
         CLI   MXRCRETX,C' '          DID SERVER RETURN A MESSAGE
         BE    ERRMSG                 NO
         MVC   WTOMSG(WMSG1L),WMSG1   INITIALIZE MESSAGE
         MVC   WTOMSG+15(L'MXRCRETX),MXRCRETX
         WTO   MF=(E,WTOMSG)
         B     EXIT
*
BUG      DS    0H
         WTO   'ASMCONN BUG IN APPLICATION'
         B     EXIT
*
CONNFAIL DS    0H
         LA    R5,=CL40'FAILED TO CONNECT TO TABLE'
         B     EXIT
*
ERRMSG   DS    0H
         WTO   'ASMCONN REQUEST FAILED'
*
EXIT     DS    0H
         AEXIT
*
WMSG1    WTO  'ASMCONN FAILED:  123456789012345678901234567890123456789X
               0',MF=L
WMSG1L   EQU  *-WMSG1
*
         ADYNAM
PLST@    DS   D
TOKEN    DS   D
ACCESS   DS   F
SPCNAM   DS   CL4
SYSNAME  DS   CL4
         SRUSPLST DSECT=NO,PREFIX=MX,LEN=MXMSGLEN
WTOMSG   WTO  'ASMCONN FAILED:  123456789012345678901234567890123456789X
               0',MF=L
         ADYNEND
         MXREQCOD PREFIX=MXUS
         MXMSGREC DSECT=YES,PREFIX=MX
*
         END
