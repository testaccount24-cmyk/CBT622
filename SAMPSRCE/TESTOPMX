*
* THIS PROGRAM DEMONSTRATES THE USE OF OPENMX
* OPENMX IS USED IN PLACE OF A STANDARD OPEN MACRO
* IT CRETAES A SHARED DATASPACE AND LOADS THE FILE INTO IT
* THEN READS THE RECORDS FROM THE DATASPACE
* WHEN THE FILE IS CLOSED THE DATASPACE WITH THE DATA IN IT
* ARE LEFT UNDER MATRIX CONTROL, SO THAT NEXT TIME FILE IS ACCESSED
* IT IS ACCESSED IN THE DATA SPACE AT HIGH SPEED.
* THE READ AND GET MACROS ARE USED AS STANDARD AND ONLY THE OPEN
* AND CLOSE MACROS NEED TO BE REPLACED
*
TESTOPMX AENTRY
*
* OBTAIN STORAGE FOR DCB AND I/O WORK AREAS
*
         LA    R2,IOBLKL       LENGTH OF IO BLOCK
         STORAGE OBTAIN,LENGTH=(R2),LOC=BELOW,COND=YES
         LTR   R15,R15
         BNZ   RETN12          SOS
*
         LR    R3,R1            STORAGE FOR IO BLOK
         MVC   0(IOBLKL,R3),IOBLK
         USING IHADCB,R3
*
*  FORMAT A DCB AND OPEN THE FILE FOR INPUT
*
OPENFILE DS    0H
         MVC   DCBDDNAM,DDNAME      THIS IS THE DDNAME
         MVI   DCBMACR1,DCBMRGET+DCBMRLCG MAKE IT GET LOCATE
         MVI   DCBMACR2,0           MAKE IT GET LOCATE
*
         LA    R1,EOF1              AT END OF FILE GO HERE
         O     R1,=X'80000000'      IN 31 BIT ADDRESSING MODE
         ST    R1,SSIOEOF@-IOBLK(R3)
         LA    R1,SSIOEOF-IOBLK(R3) EOF ADDR
         STCM  R1,7,DCBEODA         END OF DATA ADDR
*
* OPEN THE DCB POINTED AT BY R3
* NORMALLY DONE WITH AN OPEN MACRO AS COMMENTED HERE
*
*
*        LA    R2,SSIOOPN-IOBLK(R3)  @ OPEN LIST
*        XC    0(SSIOOPNL,R2),0(R2)
*        MVI   0(R2),X'84'           31 BIT OPEN
*        OPEN ((R3),INPUT),MF=(E,(R2)),MODE=31  OPEN FILE
*
* INSTEAD WE USE OPENMX
*
         OPENMX  PLIST=OPMXPLST,       OPEN FILE IN MATRIX            ++
               DCB=(R3),                                              ++
               SYSNAME=CL4'MTRX',      SERVER NAME                    ++
               VWA=CL4'TST1'           VIRTUAL WORK AREA NAME
*
         LTR   R15,R15
         BNZ   OPNFAIL
         TM    DCBOFLGS,DCBOFOPN    IS IT NOW OPEN?
         BNO   OPNFAIL              NO ERROR
*
* READ THE RECORDS FROM THE FILE
*
         XC    RECCNT,RECCNT
*
* SEE THAT THE DATA ACCESS MACRO'S ARE UNCHANGED
*
READLOOP DS    0H
         GET   (R3)                 READ THE RECORD
         LH    R4,DCBLRECL          RECORD LENGTH READ
         LR    R7,R1                @ INPUT BUFFER
*
*        GET   (R3),(R7)            READ THE RECORD
*
         LA    R0,1
         L     R1,RECCNT
         ALR   R1,R0                LENGTH OF RECORD
         ST    R1,RECCNT
*
         B     READLOOP             CONTINUE READING
*
* DISPLAY A MESSAGE ABOUT NUMBER OF RECORDS READ FROM MATRIX
*
EOF1     DS    0H
         MVC   WTOWORK(WTOWORKL),WTOTEXT
         L     R0,RECCNT
         CVD   R0,DWDWORK
         UNPK  WTOWORK+27(8),DWDWORK
         OI    WTOWORK+34,X'F0'
         WTO   MF=(E,WTOWORK)
*
         SR    R5,R5               SET RETURN CODE
EOF      DS    0H
         WTO 'END OF FILE'
*
* CLOSE THE FILE. NORMALLY YOU USE A CLOSE MACRO
* WE JUST REPLACE IT WITH A CLOSEMX
*
*        LA    R2,SSIOCLS-IOBLK(R3)  @ CLOSE LIST
*        XC    0(SSIOCLSL,R2),0(R2)  CLEAR PLIST
*        MVI   0(R2),X'80'           31 BIT CLOSE
*        CLOSE ((R3)),MF=(E,(R2)),MODE=31  CLOSE FILE
*
         CLOSEMX DCB=(R3)
*
         DROP  R3
*
         LA    R2,IOBLKL       LENGTH OF IO BLOCK
         STORAGE RELEASE,ADDR=(R3),LENGTH=(R2)
         WTO 'TESTOPMX I/O BLOCK RELEASED'
         LR    R15,R5            RETURN CODE
         B     PROGXIT
*
RETN12   DS    0H
         LA    R15,12            RET CODE
         B     PROGXIT
OPNFAIL  DS    0H
         WTO   'OPEN FAILED'
         LA    R15,4             RETURN CODE
PROGXIT  DS    0H
         AEXIT
*
DDNAME   DC    CL8'FILE1'
WTOTEXT  DS    0F
         WTO   'NUMBER OF RECORDS READ=********',MF=L
*
IOBLK    DS    0F
SSIODCB  DCB   DSORG=PS,MACRF=(PL)
SSIOCLS  CLOSE (,),MF=L,MODE=31            CLOSE LIST
SSIOCLSL EQU   *-SSIOCLS
SSIOOPN  OPEN  (,),MF=L,MODE=31            OPEN LIST
SSIOOPNL EQU   *-SSIOOPN
         DS    0F
         PUSH  USING
SSIOEOF  DS    0F                AT END OF FILE GO TO EOF
         BASR  R15,0
         USING *,R15
         L     R14,SSIOEOF@      AT END OF FILE GO TO EOF
         BSM   R0,R14            AT END OF FILE GO TO EOF
SSIOEOF@ DC    F'0'              AT END OF FILE GO TO EOF
         POP   USING
IOBLKL   EQU   *-IOBLK
*
* ------------------------------------------------------------------- *
*
         ADYNAM
DWDWORK  DS    D
WTOWORK  DS    0F
         WTO   'NUMBER OF RECORDS READ=********',MF=L
WTOWORKL EQU   *-WTOWORK
NUMBLOKS DS    F
FILENUM  DS    F
SEGNUM   DS    F
RECADDR  DS    F
RECCNT   DS    F
OPMXPLST DS    3F
*
         ADYNEND
*
         DCBD  DSORG=PS
         END
