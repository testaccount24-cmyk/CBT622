Copyright(C) Exspans Systems Inc. 1997 -2003
Matrix Concepts

What is Matrix
Matrix is a Virtual Space Administration, tabling and cross systems
communications tool.

Matrix provides a simple consistent interface to enable applications
 programs to control virtual space as a resource.

Matrix enables high speed cross systems data sharing for application
s programs.

The mechanisms enabled by Matrix can be used to re-conceive the way
in which applications software is developed and potentially improve
its performance many fold.

Matrix provides a gate way through which applications designers can
take full advantage of large scale data sharing.

The mechanisms enabled by Matrix normally requires complex authorize
d supervisor state 'systems' programs. Matrix enables theses functio
ns for applications programs without resorting to complex system pro
gramming.

Applications may request the creation of shared virtual spaces, work
 areas, tables and events.

Multiple applications from many different address spaces systems in
a sysplex may invoke the Matrix functions simultaneously.

Matrix presents vast arenas of virtual storage as linear address ran
ges to applications program. Program view these as linear memory sta
rting at address zero and proceeding byte by byte for the length of
the memory.

There is no restriction on the type of data that is placed in Virtua
l Work Area and its interpretation is up to the applications program
, in the same way that a program must interpret the contents of any
file or storage range.

Virtual Work Areas
Matrix provides applications with Virtual Work Areas in which the ap
plication can store, access and share data. A Virtual Work Area is g
iven a 4 character name by the creating application when it is creat
ed. The name may include any printable character and must be unique
within any shared group of Matrix enabled systems. The application m
ay apply any naming standard required by the application, and Matrix
 does not exercise any restrictions on the name.

If an application wishes to share data with any other application, i
t must communicate the name to the other application.

The applications designer is at liberty to include Virtual Work Area
s as a resource, in the same way as they do access methods now.

Matrix provides analogues to all major file functions and can be ins
erted into an application by replacement of I/O function requests wi
th Matrix function requests.

Matrix provides a structured interface for applications programs to
enable them to take advantage of extended storage addressing without
 any knowledge of the underlying principles.

Matrix allows the systems administrator to predefine patterns of dat
aspaces and workspaces to be used by applications programs. High lev
el language applications programs may request access to and read and
 write data in the dataspaces. The numbers and sizes of the dataspac
es may be controlled by an administrators TSO session.

Predefining dataspaces enables systems tuners to match space allocat
ions to expected resource usage. Also the applications interface is
simple and standardized. Applications may now be conceived to use sp
ace as a resource and which allows for much simplified applications
design.

Whether applications require tables in storage of 10 Megabytes or 10
 Gigabytes, Matrix can supply and manage the storage on behalf of th
e application such that the application sees the data area as a line
ar address range of real storage.

Applications may view large tables, arrays, data items or files as c
ontiguous memory locations.

With Matrix files may be preloaded for ultra fast access. The instru
ction path length to obtain data from extended memory is much shorte
r than the seek and access requirements for file I/O. This can resul
t in access times as little as one one thousandth that required for
shared files.


Share data with anything
Matrix addresses: slow external storage addressing

Matrix enables sysplex wide communications for applications easily

Matrix presents a 64 bit data addressing model. Sizes and lengths of
 data in Matrix Virtual Work Areas are presented to Matrix as 64 bit
 numbers.

Matrix is expandable and can incorporate an application into itself.

The application then becomes a service routine with all of the benef
its of Matrix Communications

 Synchronous or Asynchronous
Matrix functions can run asynchronously or synchronously with the ap
plication.

Backing Memory
Matrix memory is volatile, just like real storage. Matrix Memory can
 be backed to non-volatile storage.


Problems addressed by Matrix

* There are many heritage applications that could benefit from new s
torage technologies. Applications which have program residency restr
aints, such as those that must run below the 16Meg line, are limited
 in the memory resource they can allocate and manage.

With Matrix, these programs could have access to multiple Gigabytes
of linear memory.
Matrix will accept requests from programs in all addressing modes an
d from any programming environment.

* You have files or tables you want to share among multiple applicat
ions.

The Matrix memory is shared and accessible to all applications. Mult
iple simultaneous CICS transactions can share tables with multiply v
aried batch programs.

* You have shared files or tables that need to be refreshed regularl
y and you want to keep downtime to a minimum. Traditional method wou
ld include stopping transactions read file into tables restart trans
actions

With Matrix, the new tables may be loaded into a work area and when
ready just swapped with the old one. Down time can be kept to zero.

* I am developing Internet applications in the Unix environment and
I want to serve up data items quickly.

The simple API for Matrix will enable a programmer whose expertise i
s in the Unix arena to use complex systems functions with enhanced p
erformance without having to be retrained in MVS internals.

By providing simple secure access to almost unlimited data address r
anges Matrix allows the applications designer to re-conceive the way
 in which applications operate. High level language applications pro
grams may read, write and manipulate data in the user data spaces th
rough a simple API.

* My shared tables have become too large to maintain in storage and
performance is degraded.

Matrix provides very large multigigabyte high performance work areas
 into which tables can be loaded and shared.

* I need to access and update my shared tables from processes runnin
g in different parts of my sysplex.

Matrix enables the sharing of data in the sysplex. Access to data is
 transparent and there is no difference in access where ever in the
sysplex the applications programs are running.

Matrix enables cross systems event handling, such that a job in one
system can wait until a job in another has completed.






